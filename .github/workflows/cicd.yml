name: CI-CD Pipeline

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run unit tests
      run: |
        pytest

    - name: Code static analysis and formatting
      run: |
        pip install black
        pip install "pylint==v3.0.2"
        find src -name '*.py' | xargs pylint --rcfile=.pylintrc
        black src
        
    - name: Prevent push on failure
      if: failure()
      run: exit 1
        
  docker_build:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Build Docker image
      run: |
        docker build -t oxygen-cs:latest -t oxygen-cs:1.0 .
        
  docker_deploy:
    needs: docker_build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to DockerHub
      run: |
        docker push oxygen-cs:latest
  #       docker push oxygen-cs:1.0
